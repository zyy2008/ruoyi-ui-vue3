<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.admin.mapper.TLayerMapper">

    <resultMap type="TLayer" id="TLayerResult">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="url" column="url"/>
        <result property="serverType" column="server_type"/>
        <result property="pid" column="pid"/>
        <result property="isShow" column="is_show"/>
        <result property="dataType" column="data_type"/>
        <result property="tableName" column="table_name"/>
        <result property="deptId" column="dept_id"/>
        <result property="userId" column="user_id"/>
        <result property="layerParam" column="layer_param"/>
        <result property="baseId" column="base_id"/>
        <result property="code" column="code"/>
        <result property="del_flag" column="delFlag"/>
        <result property="baseName" column="baseName"/>
    </resultMap>

    <resultMap type="com.ruoyi.generator.domain.GenTable" id="GenTableResult">
        <id     property="tableId"        column="table_id"          />
        <result property="tableName"      column="table_name"        />
        <result property="tableComment"   column="table_comment"     />
        <result property="subTableName"   column="sub_table_name"    />
        <result property="subTableFkName" column="sub_table_fk_name" />
        <result property="className"      column="class_name"        />
        <result property="tplCategory"    column="tpl_category"      />
        <result property="tplWebType"     column="tpl_web_type"      />
        <result property="packageName"    column="package_name"      />
        <result property="moduleName"     column="module_name"       />
        <result property="businessName"   column="business_name"     />
        <result property="functionName"   column="function_name"     />
        <result property="functionAuthor" column="function_author"   />
        <result property="genType"        column="gen_type"          />
        <result property="genPath"        column="gen_path"          />
        <result property="options"        column="options"           />
        <result property="createBy"       column="create_by"         />
        <result property="createTime"     column="create_time"       />
        <result property="updateBy"       column="update_by"         />
        <result property="updateTime"     column="update_time"       />
        <result property="remark"         column="remark"            />
    </resultMap>

    <sql id="selectTLayerVo">
        select layer.id,
               layer.name,
               layer.url,
               layer.server_type,
               layer.pid,
               layer.is_show,
               layer.data_type,
               layer.table_name,
               layer.dept_id,
               layer.user_id,
               layer.layer_param,
               layer.base_id,
               layer.code,
               b.name AS baseName
        from t_layer layer
                 LEFT JOIN t_base b ON layer.base_id = b.id
    </sql>

    <select id="selectTLayerList" parameterType="TLayer" resultMap="TLayerResult">
        <include refid="selectTLayerVo"/>
        where layer.del_flag=0
        <if test="tableName != null  and tableName != ''">and layer.table_name like concat('%', #{tableName}, '%')</if>
        <if test="name != null  and name != ''">and layer.name like concat('%', #{name}, '%')</if>
        <if test="url != null  and url != ''">and layer.url like concat('%', #{url}, '%')</if>
        <if test="serverType != null  and serverType != ''">and layer.server_type = #{serverType}</if>
        <if test="pid != null  and pid != ''">and layer.pid = #{pid}</if>
        <if test="isShow != null ">and layer.is_show = #{isShow}</if>
        <if test="dataType != null  and dataType != ''">and layer.data_type = #{dataType}</if>
        <if test="deptId != null  and deptId != ''">and layer.dept_id = #{deptId}</if>
        <if test="userId != null  and userId != ''">and layer.user_id = #{userId}</if>
        <if test="layerParam != null  and layerParam != ''">and layer.layer_param = #{layerParam}</if>
        <if test="baseIds != null  and baseIds != '' and 0 &lt; baseIds.length">
            and layer.base_id in
            <foreach item="item" index="index" collection="baseIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="code != null  and code != ''">and layer.code = #{code}</if>
        <if test="baseName != null and baseName != ''">and b.name like concat('%', #{baseName}, '%')</if>
    </select>
    <select id="selectTLayerListGroupLayerParam" parameterType="TLayer" resultMap="TLayerResult">
        SELECT
        MAX(layer.id) AS id,
        MAX(layer.name) AS name,
        MAX(layer.url) AS url,
        MAX(layer.server_type) AS server_type,
        MAX(layer.pid) AS pid,
        MAX(CASE WHEN layer.is_show THEN 1 ELSE 0 END) AS is_show,
        MAX(layer.data_type) AS data_type,
        MAX(layer.table_name) AS table_name,
        MAX(layer.dept_id) AS dept_id,
        MAX(layer.user_id) AS user_id,
        layer.layer_param,
        MAX(layer.base_id) AS base_id,
        MAX(layer.code) AS code,
        MAX(b.name) AS baseName
        from t_layer layer
        LEFT JOIN t_base b ON layer.base_id = b.id
        where layer.del_flag=0
        <if test="tableName != null  and tableName != ''">and layer.table_name like concat('%', #{tableName}, '%')</if>
        <if test="name != null  and name != ''">and layer.name like concat('%', #{name}, '%')</if>
        <if test="url != null  and url != ''">and layer.url like concat('%', #{url}, '%')</if>
        <if test="serverType != null  and serverType != ''">and layer.server_type = #{serverType}</if>
        <if test="pid != null  and pid != ''">and layer.pid = #{pid}</if>
        <if test="isShow != null ">and layer.is_show = #{isShow}</if>
        <if test="dataType != null  and dataType != ''">and layer.data_type = #{dataType}</if>
        <if test="deptId != null  and deptId != ''">and layer.dept_id = #{deptId}</if>
        <if test="userId != null  and userId != ''">and layer.user_id = #{userId}</if>
        <if test="layerParam != null  and layerParam != ''">and layer.layer_param = #{layerParam}</if>
        <if test="baseIds != null  and baseIds != '' and 0 &lt; baseIds.length">
            and layer.base_id in
            <foreach item="item" index="index" collection="baseIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="code != null  and code != ''">and layer.code = #{code}</if>
        <if test="baseName != null and baseName != ''">and b.name like concat('%', #{baseName}, '%')</if>
        GROUP BY layer.layer_param;
    </select>
    <select id="selectTLayerBySetIdList" parameterType="Object" resultMap="TLayerResult">
        select layer.*
        from t_layer layer
                 left join t_layer_set_layer lsl on layer.id = lsl.layer_id
                 left join t_layer_set ls on ls.id = lsl.layer_set_id
        where layer.del_flag = 0
          and lsl.layer_set_id = #{layerSetId}
    </select>
    <select id="selectCount" parameterType="TLayer" resultType="long">
        select count(layer.id) from t_layer layer
        where layer.del_flag=0
        <if test="tableName != null  and tableName != ''">and table_name like concat('%', #{tableName}, '%')</if>
        <if test="name != null  and name != ''">and name like concat('%', #{name}, '%')</if>
        <if test="url != null  and url != ''">and url like concat('%', #{url}, '%')</if>
        <if test="serverType != null  and serverType != ''">and server_type = #{serverType}</if>
        <if test="pid != null  and pid != ''">and pid = #{pid}</if>
        <if test="isShow != null ">and is_show = #{isShow}</if>
        <if test="dataType != null  and dataType != ''">and data_type = #{dataType}</if>
        <if test="deptId != null  and deptId != ''">and dept_id = #{deptId}</if>
        <if test="userId != null  and userId != ''">and user_id = #{userId}</if>
        <if test="layerParam != null  and layerParam != ''">and layer_param = #{layerParam}</if>
        <if test="baseId != null  and baseId != ''">and base_id = #{baseId}</if>
        <if test="code != null  and code != ''">and code = #{code}</if>
        <if test="baseIds != null  and baseIds != '' and 0 &lt; baseIds.length">
            and layer.base_id in
            <foreach item="item" index="index" collection="baseIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>
    <select id="selectTLayerOne" parameterType="TLayer" resultMap="TLayerResult">
        <include refid="selectTLayerVo"/>
        where layer.del_flag=0
        <if test="tableName != null  and tableName != ''">and layer.table_name like concat('%', #{tableName}, '%')</if>
        <if test="name != null  and name != ''">and layer.name like concat('%', #{name}, '%')</if>
        <if test="url != null  and url != ''">and layer.url like concat('%', #{url}, '%')</if>
        <if test="serverType != null  and serverType != ''">and layer.server_type = #{serverType}</if>
        <if test="pid != null  and pid != ''">and layer.pid = #{pid}</if>
        <if test="isShow != null ">and layer.is_show = #{isShow}</if>
        <if test="dataType != null  and dataType != ''">and layer.data_type = #{dataType}</if>
        <if test="deptId != null  and deptId != ''">and layer.dept_id = #{deptId}</if>
        <if test="userId != null  and userId != ''">and layer.user_id = #{userId}</if>
        <if test="layerParam != null  and layerParam != ''">and layer.layer_param = #{layerParam}</if>
        <if test="baseId != null  and baseId != ''">and layer.base_id = #{baseId}</if>
        <if test="code != null  and code != ''">and layer.code = #{code}</if>
        <if test="baseIds != null  and baseIds != '' and 0 &lt; baseIds.length">
            and layer.base_id in
            <foreach item="item" index="index" collection="baseIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        limit 1
    </select>

    <select id="selectTLayerById" parameterType="Long" resultMap="TLayerResult">
        <include refid="selectTLayerVo"/>
        where layer.id = #{id}
    </select>
    <select id="selectTLayerByIds" parameterType="Object" resultMap="TLayerResult">
        <include refid="selectTLayerVo"/>
        where layer.id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <insert id="insertTLayer" parameterType="TLayer" useGeneratedKeys="true" keyProperty="id">
        insert into t_layer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="name != null and name != ''">name,</if>
            <if test="url != null">url,</if>
            <if test="serverType != null">server_type,</if>
            <if test="pid != null">pid,</if>
            <if test="isShow != null">is_show,</if>
            <if test="dataType != null">data_type,</if>
            <if test="tableName != null  and tableName != ''">table_name,</if>
            <if test="deptId != null  and deptId != ''">dept_id,</if>
            <if test="userId != null  and userId != ''">user_id,</if>
            <if test="layerParam != null  and layerParam != ''">layer_param,</if>
            <if test="baseId != null  and baseId != ''">base_id,</if>
            <if test="code != null  and code != ''">code,</if>
            <if test="delFlag != null  and delFlag != ''">del_flag,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="url != null">#{url},</if>
            <if test="serverType != null">#{serverType},</if>
            <if test="pid != null">#{pid},</if>
            <if test="isShow != null">#{isShow},</if>
            <if test="dataType != null">#{dataType},</if>
            <if test="tableName != null">#{tableName},</if>
            <if test="deptId != null">#{deptId},</if>
            <if test="userId != null">#{userId},</if>
            <if test="layerParam != null">#{layerParam},</if>
            <if test="baseId != null">#{baseId},</if>
            <if test="code != null">#{code},</if>
            <if test="delFlag != null">#{delFlag},</if>
        </trim>
    </insert>

    <update id="updateTLayer" parameterType="TLayer">
        update t_layer
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="url != null">url = #{url},</if>
            <if test="serverType != null">server_type = #{serverType},</if>
            <if test="pid != null">pid = #{pid},</if>
            <if test="isShow != null">is_show = #{isShow},</if>
            <if test="dataType != null">data_type = #{dataType},</if>
            <if test="tableName != null  and tableName != ''">table_name = #{tableName},</if>
            <if test="deptId != null  and deptId != ''">dept_id = #{deptId},</if>
            <if test="userId != null  and userId != ''">user_id = #{userId},</if>
            <if test="layerParam != null  and layerParam != ''">layer_param = #{layerParam},</if>
            <if test="baseId != null  and baseId != ''">base_id = #{baseId},</if>
            <if test="code != null  and code != ''">code = #{code},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTLayerById" parameterType="Long">
        update t_layer
        set del_flag=1
        where id = #{id}
    </delete>

    <delete id="deleteTLayerByIds" parameterType="String">
        update t_layer set del_flag=1 where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="getIntersection" resultType="String">
        SELECT ST_AsText(geom)
        FROM public."${tableName}"
        WHERE ST_Intersects(geom, ST_GeomFromText('MULTIPOLYGON(((${tagert})))', 4326));
    </select>

    <select id="getLayerTable" resultMap="GenTableResult">
        SELECT table_name, table_comment, create_time, update_time
        FROM list_table
        WHERE table_name NOT LIKE 'qrtz\_%' AND table_name NOT LIKE 'gen\_%'
        AND table_name NOT LIKE 'sys\_%' AND table_name NOT LIKE 't\_%'
        order by create_time desc
    </select>

    <select id="getAllSpatialRefSystems" resultType="Map">
    SELECT
        srid AS "srid",
        auth_name AS "authName",
        auth_srid AS "authSrid",
        srtext AS "srText",
        proj4text AS "proj4Text"
    FROM
        public.spatial_ref_sys;
</select>

    <select id="getIntersectionExt" resultType="String">
 SELECT jsonb_build_object(
        'type', 'Feature',
        'geometry', ST_AsGeoJSON(ST_Transform(geom, #{srid,jdbcType=INTEGER})),
        'properties', (row_to_json(t)::jsonb - 'geom')
    )::text
    FROM public."${tableName}" t
    WHERE ST_Intersects(geom, ST_SetSRID(ST_GeomFromGeoJSON(#{targetGeoJson,jdbcType=VARCHAR}), 4326))
</select>
</mapper>